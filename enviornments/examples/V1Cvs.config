<?xml version="1.0" encoding="utf-8" ?>
<configuration>

	<configSections>
		<section name="Installer" type="VersionOne.ServiceHost.InstallerConfigurationHandler,VersionOne.ServiceHost" />
		<section name="Services" type="VersionOne.ServiceHost.ServicesConfigurationHandler,VersionOne.ServiceHost.Core" />
	</configSections>

	<Installer>
		<ShortName>V1Cvs</ShortName>
		<LongName>VersionOne CVS Integration Service</LongName>
	</Installer>

	<Services>

    <!-- 
      Listen for LogMessage events and log them to file and/or console. LogLevel values define minimal level of logged events.
      Valid log levels, in ascending order: Debug, Info, Error. 
    -->
    <LogService class="VersionOne.ServiceHost.Core.Logging.LogService, VersionOne.ServiceHost.Core">
      <!-- Set enabled attribute value to 0 to disable console logging. -->
      <Console enabled="1">
        <LogLevel>Debug</LogLevel>
      </Console>
      <!-- Set enabled attribute value to 0 to disable file logging. -->
      <File enabled="1">
        <LogLevel>Info</LogLevel>
        <!-- File name to log messages, either absolute or relative -->
        <Filename>.\ServiceHost.log</Filename>
        <!-- Maximum log file size. The file will never extend the limit as older messages are truncated. Valid size values examples: 100KB, 500KB, 10MB. -->
        <MaximumFileSize>10MB</MaximumFileSize>
      </File>
    </LogService>

		<!-- Timer that flushes Profile periodically -->
		<ProfileFlushTimer class="VersionOne.ServiceHost.Core.Services.TimePublisherService,VersionOne.ServiceHost.Core">
			<Interval>10000</Interval>
			<PublishClass>VersionOne.ServiceHost.CommonMode+FlushProfile,VersionOne.ServiceHost.Core</PublishClass>
		</ProfileFlushTimer>

    <CvsReaderService class="VersionOne.ServiceHost.SourceServices.Cvs.CvsReaderHostedService, VersionOne.ServiceHost.SourceServices.Cvs" >
      <!-- Path to CVS repository, including access protocol and username, in the same format that console client would accept -->
      <RepositoryPath>:pserver:user@host:/cvs</RepositoryPath>
      <Module>cvstest</Module>
      <Password>password</Password>
      <!-- 
				=== Sample Regexes ===
				To Match S-01001 (Matches "S-01001"):					[A-Z]{1,2}-[0-9]+
				To match #Reference (matches only "Reference"):			(?<=#)[a-zA-Z]+\b
				To match "V1:Reference"  (matches only "Reference"):	(?<=V1:)[a-zA-Z]+\b
			-->
      <ReferenceExpression><![CDATA[[A-Z]{1,2}-[0-9]+]]></ReferenceExpression>
    </CvsReaderService>
    <CvsReaderServiceTimer class="VersionOne.ServiceHost.Core.Services.TimePublisherService, VersionOne.ServiceHost.Core">
			<Interval>60000</Interval>
			<PublishClass>VersionOne.ServiceHost.SourceServices.Cvs.CvsReaderHostedService+IntervalSync, VersionOne.ServiceHost.SourceServices.Cvs</PublishClass>
		</CvsReaderServiceTimer>

		<ChangeSetWriterService class="VersionOne.ServiceHost.SourceServices.Cvs.ChangeSetWriterService, VersionOne.ServiceHost.SourceServices.Cvs">
			<Settings>
				<ApplicationUrl>http://localhost/VersionOne/</ApplicationUrl>
				<Username>admin</Username>
				<Password>admin</Password>
				<APIVersion>6.5.0.0</APIVersion>
				<IntegratedAuth>false</IntegratedAuth>
        <ProxySettings disabled="1">
          <Uri>http://proxyhost:3128</Uri>
          <UserName>username</UserName>
          <Password>password</Password>
          <Domain>domen</Domain>
        </ProxySettings>
			</Settings>
			<ReferenceAttribute>Number</ReferenceAttribute>
			<ChangeComment>Updated by VersionOne.ServiceHost</ChangeComment>
			<AlwaysCreate>false</AlwaysCreate>
		</ChangeSetWriterService>
	
	</Services>

</configuration>