<?xml version="1.0" encoding="utf-8" ?>
<configuration>

	<configSections>
		<section name="Installer" type="VersionOne.ServiceHost.InstallerConfigurationHandler,VersionOne.ServiceHost" />
		<section name="Services" type="VersionOne.ServiceHost.ServicesConfigurationHandler,VersionOne.ServiceHost.Core" />
	</configSections>

	<Installer>
		<ShortName>V1TestComplete</ShortName>
		<LongName>VersionOne Test Complete Integration Service</LongName>
	</Installer>

	<Services>

    <!-- 
      Listen for LogMessage events and log them to file and/or console. LogLevel values define minimal level of logged events.
      Valid log levels, in ascending order: Debug, Info, Error. 
    -->
    <LogService class="VersionOne.ServiceHost.Core.Logging.LogService, VersionOne.ServiceHost.Core">
      <!-- Set enabled attribute value to 0 to disable console logging. -->
      <Console enabled="1">
        <LogLevel>Info</LogLevel>
      </Console>
      <!-- Set enabled attribute value to 0 to disable file logging. -->
      <File enabled="1">
        <LogLevel>Info</LogLevel>
        <!-- File name to log messages, either absolute or relative -->
        <Filename>.\ServiceHost.log</Filename>
        <!-- Maximum log file size. The file will never extend the limit as older messages are truncated. Valid size values examples: 100KB, 500KB, 10MB. -->
        <MaximumFileSize>10MB</MaximumFileSize>
      </File>
    </LogService>

		<!-- Timer that flushes Profile periodically -->
		<ProfileFlushTimer class="VersionOne.ServiceHost.Core.Services.TimePublisherService,VersionOne.ServiceHost.Core">
			<Interval>10000</Interval>
			<PublishClass>VersionOne.ServiceHost.CommonMode+FlushProfile,VersionOne.ServiceHost.Core</PublishClass>
		</ProfileFlushTimer>

		<!-- 
			Read Test Complete Test Results and Publish for TestWriterService to process
			Wait for an IntervalSync to be published and process all the files in the Watch folder
			Filter files to watch to those that match the filter extension
		-->
		<TCReaderService class="VersionOne.ServiceHost.TestServices.TestComplete.TCReaderService, VersionOne.ServiceHost.TestServices.TestComplete">
			<ProjectSuiteConfig>C:\TestComplete 6 Projects\ProjectSuite1\ProjectSuite1.pjs.tcLS</ProjectSuiteConfig>
      <RetryTimeout>1000</RetryTimeout>
      <RetryAttempts>3</RetryAttempts>
		</TCReaderService>
		<TCReaderServiceTimer class="VersionOne.ServiceHost.Core.Services.TimePublisherService, VersionOne.ServiceHost.Core">
			<Interval>300000</Interval>
			<PublishClass>VersionOne.ServiceHost.TestServices.TestComplete.TCReaderService+IntervalSync, VersionOne.ServiceHost.TestServices.TestComplete</PublishClass>
		</TCReaderServiceTimer>

		<!-- 
			Update Tests in VersionOne 
			Settings are passed to V1Central for configuring VersionOne API Connectivity
			PassedOid is the Oid from a VersionOne system to set a VersionOne Test Asset to when a corresponding Test is passing
			FailedOid is the Oid from a VersionOne system to set a VersionOne Test Asset to when a corresponding Test is failing
		-->
		<TestWriterService class="VersionOne.ServiceHost.TestServices.TestWriterService, VersionOne.ServiceHost.TestServices">
			<Settings>
				<ApplicationUrl>http://localhost/VersionOne/</ApplicationUrl>
				<Username>admin</Username>
				<Password>admin</Password>
				<APIVersion>6.5.0.0</APIVersion>
				<IntegratedAuth>false</IntegratedAuth>
        <ProxySettings disabled="1">
          <Uri>http://proxyhost:3128</Uri>
          <UserName>username</UserName>
          <Password>password</Password>
          <Domain>domain</Domain>
        </ProxySettings>
			</Settings>
			<PassedOid>TestStatus:129</PassedOid>
			<FailedOid>TestStatus:155</FailedOid>
			<TestReferenceAttribute>Reference</TestReferenceAttribute>
			<ChangeComment>Updated by VersionOne.ServiceHost</ChangeComment>
			<!-- Embedded Rich Text (HTML) is valid in this suffix -->
			<DescriptionSuffix>Check the external test system for more details.</DescriptionSuffix>
			<!-- Valid values are All, CurrentIteration, None -->
			<CreateDefect>All</CreateDefect>
		</TestWriterService>

	</Services>

</configuration>