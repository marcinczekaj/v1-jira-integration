//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.239
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace VersionOne.ServiceHost.Tests {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("VersionOne.ServiceHost.Tests.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt; 
        ///&lt;changesets&gt;
        ///	&lt;changeset id=&quot;2c471d00-f578-4ef8-9c99-4ba3d604c100&quot; author=&quot;Author&quot; date=&quot;01/01/2010 1:00:00&quot; message=&quot;Update to TK-01001&quot;&gt;
        ///		&lt;change&gt;
        ///			&lt;file&gt;test.ext&lt;/file&gt;
        ///			&lt;revision&gt;1.1&lt;/revision&gt;
        ///			&lt;branch&gt;BranchName&lt;/branch&gt;
        ///			&lt;symNames&gt;SymNames&lt;/symNames&gt;
        ///        	        &lt;author&gt;Author&lt;/author&gt;
        ///			&lt;message&gt;Update to TK-01001&lt;/message&gt;
        ///			&lt;date&gt;01/01/2010 1:00:00&lt;/date&gt;
        ///		&lt;/change&gt;
        ///	&lt;/changeset&gt;
        ///&lt;/changesets&gt;.
        /// </summary>
        internal static string ChangeSetsXml {
            get {
                return ResourceManager.GetString("ChangeSetsXml", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;&lt;CvsReaderService class=&quot;VersionOne.ServiceHost.SourceServices.Cvs.CvsReaderHostedService, VersionOne.ServiceHost.SourceServices&quot; &gt;
        ///       &lt;RepositoryPath&gt;:pserver:user@host:/cvs&lt;/RepositoryPath&gt;
        ///      &lt;Module&gt;/cvstest&lt;/Module&gt;
        ///      &lt;Password&gt;password&lt;/Password&gt;
        ///      &lt;ReferenceExpression&gt;&lt;![CDATA[[A-Z]{1,2}-[0-9]+]]&gt;&lt;/ReferenceExpression&gt;
        ///    &lt;/CvsReaderService&gt;.
        /// </summary>
        internal static string CvsServiceConfigXmlStub {
            get {
                return ResourceManager.GetString("CvsServiceConfigXmlStub", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;
        ///&lt;changelog/&gt;.
        /// </summary>
        internal static string EmptyCvsServerLog {
            get {
                return ResourceManager.GetString("EmptyCvsServerLog", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;
        ///             &lt;changelog&gt;
        ///              &lt;entry&gt;
        ///                &lt;date&gt;2010-01-18&lt;/date&gt;
        ///                &lt;time&gt;13:15&lt;/time&gt;
        ///                &lt;author&gt;&lt;![CDATA[cvsuser]]&gt;&lt;/author&gt;
        ///                &lt;file&gt;
        ///                  &lt;name&gt;new2/2.txt&lt;/name&gt;
        ///                  &lt;revision&gt;1.1&lt;/revision&gt;
        ///		  &lt;branch&gt;BranchName&lt;/branch&gt;
        ///		  &lt;symNames&gt;SymNames&lt;/symNames&gt;
        ///                &lt;/file&gt;
        ///                &lt;msg&gt;&lt;![CDATA[addition to TK-00001]]&gt;&lt;/msg&gt;
        ///              &lt;/entry&gt;
        ///    [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string NonEmptyCvsServerLog {
            get {
                return ResourceManager.GetString("NonEmptyCvsServerLog", resourceCulture);
            }
        }
    }
}
